name: Deployment

concurrency: production

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:

  build:
    name: "Заполним переменных окружения"
    runs-on: ubuntu-latest
    environment: production  # использовать среду "production"

    steps:
      - name: "Инициализация репозитория"
        uses: actions/checkout@v3

      - name: "Заполнение переменных среды"
        run: |
          echo "MYSQL_HOST=${{ secrets.MYSQL_HOST }}" >> .env
          echo "MYSQL_DATABASE=${{ secrets.MYSQL_DATABASE }}" >> .env
          echo "MYSQL_USER=${{ secrets.MYSQL_USER }}" >> .env
          echo "MYSQL_PASSWORD=${{ secrets.MYSQL_PASSWORD }}" >> .env
          echo "MYSQL_ROOT_PASSWORD=${{ secrets.MYSQL_ROOT_PASSWORD }}" >> .env
          echo "MYSQL_PORT=${{ secrets.MYSQL_PORT }}" >> .env
          echo "TELEGRAM_TOKEN=${{ secrets.TELEGRAM_TOKEN }}" >> .env
          echo "TELEGRAM_ADMIN_CHAT_ID=${{ secrets.TELEGRAM_ADMIN_CHAT_ID }}" >> .env
          echo "TELEGRAM_BOT_NAME=${{ vars.TELEGRAM_BOT_NAME }}" >> .env
          echo "MAX_OF_MESSAGES_PER_DAY=${{ vars.MAX_OF_MESSAGES_PER_DAY }}" >> .env
          echo "MAX_LINE_LENGTH=${{ vars.MAX_LINE_LENGTH }}" >> .env
          echo "ENVIRONMENT=${{ vars.ENVIRONMENT }}" >> .env

      - name: "Создадим каталог проекта"
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          password: ${{ secrets.PASSWORD }}
          port: ${{ secrets.PORT }}
          script: |
            mkdir -p ${{ vars.PROJECT_PATH }}

      - name: "Скопируйте .env в папку проекта."
        run: cp .env ./app

      - name: "Скопируйте файлы приложения на удаленный сервер."
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          password: ${{ secrets.PASSWORD }}
          port: ${{ secrets.PORT }}
          source: "./*"
          target: ${{ vars.PROJECT_PATH }}

  deploy:
    name: "Запуск контейнера"
    runs-on: ubuntu-latest
    needs: [ build ]
    environment: production  # использовать среду "production"
    steps:
      - name: "Поднимем docker-compose"
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          password: ${{ secrets.PASSWORD }}
          port: ${{ secrets.PORT }}
          script: |
            cd ${{ vars.PROJECT_PATH }}
            make docker-pull                    
            make docker-build                    
            make docker-up                    
            make composer-install                    
            make wait-for-mysql                      
            make migrate               

  test:
    name: "Тест"
    runs-on: ubuntu-latest
    needs: [ deploy ]
    steps:
      - name: "Подготовка репозитория"
        uses: actions/checkout@v3

      - name: "Проверим, что наши контейнеры запустились"
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          password: ${{ secrets.PASSWORD }}
          port: ${{ secrets.PORT }}
          script: |
            running_containers=$(docker ps --filter "name=rem_it_bot_php" --filter "name=rem_it_bot_mysql" --format "{{.Names}}")
            if [[ -z $running_containers ]]; then
              echo "ОШИБКА: Контейнеры не запущены"
              exit 1
            else
              echo "Все контейнеры работают"
            fi

  alert:
    name: "Уведомление"
    runs-on: ubuntu-latest
    needs: [ test ]
    steps:
      - name: "Отправить телеграмму по push-уведомлению"
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_CHAT_ID }}
          token: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          message: |
            ${{ github.actor }} создал commit:
            Commit: ${{ github.event.commits[0].message }}

            Репозиторий: ${{ github.repository }}

            Изменения: https://github.com/${{ github.repository }}/commit/${{github.sha}}