name: Deployment

concurrency: production

on:
  push:
    branches: [ "main" ]
    paths:
      - ".github/workflows/deploy-prod.yml"
  pull_request:
    branches: [ "main" ]

jobs:

  build:
    runs-on: ubuntu-latest
    environment: production  # использовать среду "production"

    steps:
      - name: "Инициализация репозитория"
        uses: actions/checkout@v3

      - name: "Заполнение переменных среды"
        run: |
          echo "MYSQL_HOST=${{ secrets.MYSQL_HOST }}" >> .env
          echo "MYSQL_DATABASE=${{ secrets.MYSQL_DATABASE }}" >> .env
          echo "MYSQL_USER=${{ secrets.MYSQL_USER }}" >> .env
          echo "MYSQL_PASSWORD=${{ secrets.MYSQL_PASSWORD }}" >> .env
          echo "MYSQL_ROOT_PASSWORD=${{ secrets.MYSQL_ROOT_PASSWORD }}" >> .env
          echo "MYSQL_PORT=${{ secrets.MYSQL_PORT }}" >> .env
          echo "TELEGRAM_TOKEN=${{ secrets.TELEGRAM_TOKEN }}" >> .env
          echo "TELEGRAM_ADMIN_CHAT_ID=${{ env.TELEGRAM_ADMIN_CHAT_ID }}" >> .env
          echo "TELEGRAM_BOT_NAME=${{ vars.TELEGRAM_BOT_NAME }}" >> .env
          echo "MAX_OF_MESSAGES_PER_DAY=${{ vars.MAX_OF_MESSAGES_PER_DAY }}" >> .env
          echo "MAX_LINE_LENGTH=${{ vars.MAX_LINE_LENGTH }}" >> .env

      - name: "Опубликуем артефакт, чтоб забрать его в deploy"
        uses: actions/upload-artifact@v2
        with:
          name: ENV-artifact
          path: .env


  deploy:
    runs-on: ubuntu-latest
    needs: [ build ]
    environment: production  # использовать среду "production"

    steps:
      - name: "Создадим каталог проекта"
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          password: ${{ secrets.PASSWORD }}
          port: ${{ secrets.PORT }}
          script: |
            mkdir -p ${{ vars.PROJECT_PATH }}

      - name: "Инициализация репозитория"
        uses: actions/checkout@v3

      - name: "Заберём артефакт"
        uses: actions/download-artifact@v2
        with:
          name: ENV-artifact

      - name: "Скопируйте .env в папку проекта."
        run: cp .env ./app

      - name: "Скопируйте файлы приложения на удаленный сервер."
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          password: ${{ secrets.PASSWORD }}
          port: ${{ secrets.PORT }}
          source: "./*"
          target: ${{ vars.PROJECT_PATH }}

  preparation:
    runs-on: ubuntu-latest
    needs: [ deploy ]
    steps:
      - name: "Поставим make" # Он нам нужен для сборки
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          password: ${{ secrets.PASSWORD }}
          port: ${{ secrets.PORT }}
          script: sudo apt-get update && sudo apt-get install make -y  # Установка make на Debian

  publish:
    runs-on: ubuntu-latest
    needs: [ preparation ]
    environment: production  # использовать среду "production"
    steps:
      - name: "Поднимем docker-compose"
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          password: ${{ secrets.PASSWORD }}
          port: ${{ secrets.PORT }}
          script: |
            cd ${{ vars.PROJECT_PATH }}
            make update
            docker ps

#  test:
#    runs-on: ubuntu-latest
#    needs: [ publish ]
#    steps:
#      - name: Check website
#        uses: wei/curl@v1
#        with:
#          args: https://lyucean.com/
#

  alert:
    name: Alert
    runs-on: ubuntu-latest
    needs: [ publish ]
    steps:
      - name: Send telegram message on push
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_CHAT_ID }}
          token: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          message: |
            ${{ github.actor }} создал commit:
            Commit: ${{ github.event.commits[0].message }}

            Репозиторий: ${{ github.repository }}

            Изменения: https://github.com/${{ github.repository }}/commit/${{github.sha}}